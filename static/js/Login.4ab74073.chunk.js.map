{"version":3,"file":"static/js/Login.4ab74073.chunk.js","mappings":"mTAUe,SAASA,IAEtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAA+BC,EAAAA,EAAAA,MAA/B,eAAOC,EAAP,KAAgBC,EAAhB,KAAgBA,UAEVC,EAAU,CACdP,SAAAA,EACAF,MAAAA,GAGIU,EAAe,SAAAC,GACnB,MAAuBA,EAAEC,cAAlBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACb,OAAQD,GACL,IAAK,QACNZ,EAASa,GACR,MACA,IAAK,WACJX,EAAYW,GACb,MACA,QACA,OAEL,EAEMC,EAAY,mCAAG,WAAMJ,GAAN,8EACnBA,EAAEK,iBADiB,kBAGST,EAAME,GAASQ,SAHxB,OAGXC,EAHW,OAIjBd,GAASe,EAAAA,EAAAA,IAAeD,IAJP,gDAMjBE,MAAM,wBAAD,OAAyBpB,EAAzB,0BANY,QAQnBC,EAAS,IACTE,EAAY,IATO,yDAAH,sDAalB,OACE,gBACJkB,MAAO,CACLC,UAAW,IACXC,WAAY,IACZC,MAAO,KAJL,UAMD,kBAAMC,SAAUV,EAAhB,WACC,UAAC,IAAD,CACEW,GAAI,CACFF,MAAO,IACPG,SAAU,QAHd,WAKE,SAAC,IAAD,CAAWC,WAAS,EACpBC,MAAM,QACNC,GAAG,QACHC,KAAK,QACLlB,KAAK,QACLmB,SAAUtB,EACVI,MAAOd,KAEP,SAAC,IAAD,CACA0B,GAAI,CACDJ,UAAW,GAEdM,WAAS,EACTC,MAAM,WACNC,GAAG,WACHC,KAAK,WACLlB,KAAK,WACLmB,SAAUtB,EACVI,MAAOZ,QAIT,SAAC,IAAD,CAAQ+B,QAAQ,YACfF,KAAK,SACLG,SAAU1B,EACVkB,GAAI,CACHJ,UAAW,GAJb,uBAUH,C","sources":["components/Login/Login.jsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport {useLoginMutation} from '../../redux/authApi';\nimport {setCredentials} from '../../redux/authSlice';\n\n\nexport default function Login() {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const [login, { isLoading }] = useLoginMutation();\n  \n  const loginEl = {\n    password,\n    email\n  };\n\n  const handleChange = e => {\n    const {name, value,} = e.currentTarget;\n    switch (name) {\n       case 'email':\n      setEmail(value);\n       break;\n       case 'password':\n        setPassword(value);\n       break;\n       default:\n       return;  \n    }\n };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const dataRespons = await login(loginEl).unwrap();\n      dispatch(setCredentials(dataRespons));\n    } catch (error) {\n      alert(`User with the email: ${email} does not exist!`, error);\n    }\n    setEmail('');\n    setPassword('');\n   \n  };\n\n  return (\n    <div\nstyle={{\n  marginTop: 150,\n  marginLeft: 500,\n  width: 900,\n }}>\n   <form onSubmit={handleSubmit}>\n    <Box\n      sx={{\n        width: 500,\n        maxWidth: '100%',\n      }}>\n      <TextField fullWidth \n      label=\"Email\" \n      id=\"email\" \n      type=\"email\"\n      name=\"email\"\n      onChange={handleChange}\n      value={email}\n      />\n      <TextField \n      sx={{\n         marginTop: 3,\n       }}\n      fullWidth \n      label=\"Password\" \n      id=\"password\"\n      type=\"password\"\n      name=\"password\"\n      onChange={handleChange}\n      value={password}\n      />\n    </Box>\n\n    <Button variant=\"contained\"\n     type=\"submit\"\n     disabled={isLoading}\n     sx={{\n      marginTop: 3,\n    }}\n    >LOGIN</Button>\n    </form>\n    </div>\n  );\n}"],"names":["Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","useLoginMutation","login","isLoading","loginEl","handleChange","e","currentTarget","name","value","handleSubmit","preventDefault","unwrap","dataRespons","setCredentials","alert","style","marginTop","marginLeft","width","onSubmit","sx","maxWidth","fullWidth","label","id","type","onChange","variant","disabled"],"sourceRoot":""}